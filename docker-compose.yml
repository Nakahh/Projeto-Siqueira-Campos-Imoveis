# Docker Compose - Siqueira Campos Imóveis
# Ambiente de Desenvolvimento
# Desenvolvido por KRYONIX Tecnologia

version: "3.8"

services:
  # Aplicação Principal
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: siqueira-app-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: file:./dev.db
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./dev.db:/app/dev.db
    networks:
      - siqueira-network

  # Banco PostgreSQL (opcional para desenvolvimento avançado)
  postgres:
    image: postgres:15-alpine
    container_name: siqueira-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: siqueira_dev
      POSTGRES_USER: siqueira
      POSTGRES_PASSWORD: siqueira123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - siqueira-network
    profiles:
      - postgres

  # Redis (opcional para cache)
  redis:
    image: redis:7-alpine
    container_name: siqueira-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - siqueira-network
    profiles:
      - redis

  # N8N (opcional para automações)
  n8n:
    image: n8nio/n8n:latest
    container_name: siqueira-n8n-dev
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      WEBHOOK_URL: http://localhost:5678
      GENERIC_TIMEZONE: America/Sao_Paulo
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - siqueira-network
    profiles:
      - n8n

  # Evolution API (opcional para WhatsApp)
  evolution:
    image: atendai/evolution-api:latest
    container_name: siqueira-evolution-dev
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      SERVER_TYPE: http
      CORS_ORIGIN: "*"
      DEL_INSTANCE: "false"
      AUTHENTICATION_API_KEY: dev_evolution_key
    volumes:
      - evolution_data:/evolution/instances
    networks:
      - siqueira-network
    profiles:
      - evolution

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local
  evolution_data:
    driver: local

networks:
  siqueira-network:
    driver: bridge
# Como usar:
# Desenvolvimento básico (apenas app): docker-compose up -d
# Com PostgreSQL: docker-compose --profile postgres up -d
# Com todos os serviços: docker-compose --profile postgres --profile redis --profile n8n --profile evolution up -d
